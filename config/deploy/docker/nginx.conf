#user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent // http_referer - "$http_referer" // '
                      'http_user_agent - "$http_user_agent" // http_x_forwarded_for - "$http_x_forwarded_for" // '
                      '"$proxy_host" "$upstream_addr" // ';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    brotli on;
    brotli_static on;
    brotli_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        listen [::]:80;

        server_name .dldevel;

        location /readiness {
          return 200 'ok';
        }

        location /liveness {
          return 200 'ok';
        }

        # Redirect from dev domains to https
        location / {
            return 301 https://$http_host$request_uri;
        }
    }

    map $request_uri $api_name {
        ~*^/external-api-([^/]+)/ $1;
    }

    map $api_name $api_host {
        "passport-central" "passport-stage.wildberries.ru";
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name .dldevel;
        root /usr/share/metadata/core/build;

        rewrite ^/nsf/([^/]+)/frontend-services/(.*)$ /$2 last;

        location / {
            try_files $uri @sellerPortalStage;
        }

        location /config_dev.json {
            ssi on;
            ssi_last_modified on;
            ssi_types application/json;
            default_type application/json;

            return 200 '[{
                "name": "menu.main-page",
                "staticURL": "/nsf/dev/frontend-services",
                "config": <!--# include virtual="/config.json" -->
            }]';
        }

        location /sw.js {
            return 404;
        }

        location @sellerPortalStage {
            proxy_pass https://seller-portal-stage.wildberries.ru;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host seller-portal-stage.wildberries.ru;
            proxy_set_header Accept-Encoding "";
            proxy_cookie_domain ~.*$ $host;

            sub_filter_types *;
            sub_filter "https://passport-stage.wildberries.ru" "/external-api-passport-central";
            sub_filter "</head>" "<script>
            window.__ENDPOINTS__ = window.__ENDPOINTS__ || {};
            window.__ENDPOINTS__.LOAD_MENU_FILE_REQUEST_ENDPOINT = '/config_dev.json';
            window.ENVS = window.ENVS || {};
            window.ENVS.LOCALE_WILDCARD_DOMAIN = '$host';
            </script></head>";
        }

        location ~* ^/external-api-([^/]+)/ {
            rewrite ^/external-api-[^/]+/(.*)$ /$1 break;

            proxy_pass "$scheme://$api_host";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $api_host;
            proxy_cookie_domain ~.*$ $host;
            proxy_cookie_path / /external-api-$api_name/;
        }
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name localhost;

        location /readiness {
          return 200 'ok';
        }

        location /liveness {
          return 200 'ok';
        }

        location / {
            root /usr/share/metadata/core/build;
            try_files $uri /build$uri =404;
        }
    }

    server {
        listen 9113;
        listen [::]:9113;

        server_name localhost_metrics;

        location /metrics {
            root /usr/share/metadata/core/build;

            try_files /package-versions.txt =404;
        }
    }
}

